#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{textcomp}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Paragraph
Error-correction Codes
\end_layout

\begin_layout Standard

\shape italic
Block codes
\shape default
 are finite length codes first studied by Golay 
\begin_inset CommandInset citation
LatexCommand cite
key "Golay:1949"
literal "false"

\end_inset

 and Hamming 
\begin_inset CommandInset citation
LatexCommand cite
key "Hamming:1950"
literal "false"

\end_inset

.
 A 
\shape italic
linear
\shape default
 
\begin_inset Formula $\left[n,k\right]_{q}$
\end_inset

 
\shape italic
block code
\shape default
 
\begin_inset Formula $\ensuremath{\mathcal{C}}$
\end_inset

 of length 
\begin_inset Formula $n$
\end_inset

, dimension 
\begin_inset Formula $k$
\end_inset

 and codimension (or redundancy) 
\begin_inset Formula $r=n-k$
\end_inset

, is a 
\begin_inset Formula $k$
\end_inset

-dimensional 
\shape italic
linear subspace
\shape default
 of 
\begin_inset Formula $\ensuremath{\mathbb{F}}_{q}^{n}$
\end_inset

.
 A 
\shape italic
generator matrix
\shape default
 
\begin_inset Formula $\boldsymbol{G}$
\end_inset

 has 
\begin_inset Formula $k$
\end_inset

 rows, which form a 
\shape italic
basis
\shape default
 of 
\begin_inset Formula $\ensuremath{\mathcal{C}}$
\end_inset

, i.e., 
\begin_inset Formula $\boldsymbol{G}$
\end_inset

's row space is a set of 
\begin_inset Formula $k$
\end_inset

 linearly independent vectors generating 
\begin_inset Formula $\ensuremath{\mathcal{C}}$
\end_inset

.
 The codeword 
\begin_inset Formula $\underline{c}\in\ensuremath{\mathcal{C}}$
\end_inset

 is encoded by the 
\shape italic
information vector
\shape default
 (or 
\shape italic
message
\shape default
) 
\begin_inset Formula $\boldsymbol{m}$
\end_inset

, with 
\begin_inset Formula $\boldsymbol{c}=\boldsymbol{m}\cdot\boldsymbol{G}$
\end_inset

.
 For any 
\begin_inset Formula $\boldsymbol{c}\in\ensuremath{\mathcal{C}}$
\end_inset

: 
\begin_inset Formula $\boldsymbol{c}\cdot\boldsymbol{H}^{T}=\boldsymbol{0}$
\end_inset

, with 
\begin_inset Formula $\boldsymbol{H}$
\end_inset

 is a 
\shape italic
parity-check matrix
\shape default
 of 
\begin_inset Formula $\ensuremath{\mathcal{C}}$
\end_inset

, whose row space generates the 
\begin_inset Formula $\left[n,n-k\right]_{q}$
\end_inset

 dual code 
\begin_inset Formula $\ensuremath{\mathcal{C}}^{\perp}$
\end_inset

.
 
\begin_inset Formula $\left[n,k,d\right]_{q}$
\end_inset

 is equivalent to 
\begin_inset Formula $\left[n,k\right]_{q}$
\end_inset

 with  minimum distance 
\begin_inset Formula $d$
\end_inset

 fulfills 
\begin_inset Formula $d=\underset{\boldsymbol{c}\in\ensuremath{\mathcal{C}\setminus\left\{ \boldsymbol{0}\right\} }}{min}d\left(\boldsymbol{c},\boldsymbol{0}\right)$
\end_inset

 with respect to a metric 
\begin_inset Formula $d\left(\cdot,\cdot\right):\ensuremath{\mathbb{F}}^{n}\times\ensuremath{\mathbb{F}}^{n}\rightarrow\mathbb{R}_{\geq0}$
\end_inset

 on 
\begin_inset Formula $\ensuremath{\mathbb{F}}^{n}$
\end_inset

 
\begin_inset Foot
status open

\begin_layout Plain Layout
i.e., 
\begin_inset Formula $d\left(\boldsymbol{x},\boldsymbol{y}\right)\geq0$
\end_inset

,
\begin_inset Formula $d\left(\boldsymbol{x},\boldsymbol{y}\right)=0$
\end_inset

 iff 
\begin_inset Formula $\boldsymbol{x}=\boldsymbol{y}$
\end_inset

, 
\begin_inset Formula $d\left(\boldsymbol{x},\boldsymbol{y}\right)=d\left(\boldsymbol{y},\boldsymbol{x}\right)$
\end_inset

 and 
\begin_inset Formula $d\left(\boldsymbol{x},\boldsymbol{z}\right)\leq d\left(\boldsymbol{x},\boldsymbol{y}\right)+d\left(\boldsymbol{y},\boldsymbol{z}\right)$
\end_inset

 for all 
\begin_inset Formula $\boldsymbol{x},\boldsymbol{y},\boldsymbol{z}\in\ensuremath{\mathbb{F}}^{n}$
\end_inset

.
\end_layout

\end_inset

.
\end_layout

\begin_layout Paragraph
Alphabet Size
\end_layout

\begin_layout Standard
When we refer the 
\shape italic
alphabet size
\shape default
 of a network coding solution, we mean the field size 
\begin_inset Formula $q_{\mathrm{s}}$
\end_inset

 or 
\begin_inset Formula $q_{v}$
\end_inset

 of the finite field 
\begin_inset Formula $\ensuremath{\mathbb{F}}_{q_{\mathrm{s}}}$
\end_inset

 or 
\begin_inset Formula $\ensuremath{\mathbb{F}}_{q_{v}}$
\end_inset

 respectively for such a scalar solution or a vector solution.
 The alphabet size is an important parameter determining the amount of computati
on performed at each network vertice 
\begin_inset CommandInset citation
LatexCommand cite
key "Wachter-Zeh:2018"
literal "true"

\end_inset

.
 The problem of finding the minimum required alphabet size of a (linear
 or nonlinear) scalar network code for a certain multicast network is NP-complet
e 
\begin_inset CommandInset citation
LatexCommand cite
key "Langberg:2009,Lehman:2004"
literal "true"

\end_inset

.
\end_layout

\begin_layout Paragraph
Link Capacity
\end_layout

\begin_layout Standard
Each link in a network has 
\shape italic
unit capacity
\shape default
, and it carries a packet which is either a symbol from 
\begin_inset Formula $\ensuremath{\mathbb{F}}_{q_{\mathrm{s}}}$
\end_inset

 (in scalar network coding), or a vector of length 
\begin_inset Formula $t$
\end_inset

 over 
\begin_inset Formula $\ensuremath{\mathbb{F}}_{q}$
\end_inset

 (in vector network coding).
 Note that the assumption of unit capacity does not restrict our considered
 networks, since links of larger capacity can be represented by multiple
 parallel links of unit capacity.
\end_layout

\begin_layout Section
Network Model
\end_layout

\begin_layout Standard
A class of networks which is mainly studied is the class of multicast networks.
 It can be one-to-many or many-to-many distribution 
\begin_inset CommandInset citation
LatexCommand cite
key "Harte:2008"
literal "false"

\end_inset

.
 In this study, we target one-to-many multicast network with the distribution
 of a data packet to a group of users 
\begin_inset CommandInset citation
LatexCommand cite
key "Zhang:2012"
literal "false"

\end_inset

.
 An interesting network structure often used for multicast networks in network
 coding is called Combination Network (CN) and denoted by 
\begin_inset Formula $\mathcal{N}_{h,r,s}$
\end_inset

.
 Many examples in previous studies demonstrating the advantage of network
 coding have used structures identical or similar to that of CN.
 We mention a few examples to emphasize CN's importance in the study of
 network coding.
 In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:butterfly_nw_cn"
plural "false"
caps "false"
noprefix "false"

\end_inset

, the butterfly network that is often used as a first example to motivate
 network coding, e.g.
 
\begin_inset CommandInset citation
LatexCommand cite
after "Fig. 7"
key "Ahlswede:2000"
literal "false"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
after "Fig. 1"
key "Sanders:2003"
literal "false"

\end_inset

, is isomorphic to 
\begin_inset Formula $\mathcal{N}_{h,r=3,s=2}$
\end_inset

, if we consider it as an undirected network 
\begin_inset CommandInset citation
LatexCommand cite
key "Maheshwar:2012"
literal "false"

\end_inset

.
 The 
\begin_inset Formula $\mathcal{N}_{h,r=3,s=2}$
\end_inset

 itself was also used in the first study of network coding 
\begin_inset CommandInset citation
LatexCommand cite
key "Ahlswede:2000"
literal "false"

\end_inset

.
 Other CNs, i.e.
 
\begin_inset Formula $\mathcal{N}_{h,r=4,s=2}$
\end_inset

 and 
\begin_inset Formula $\mathcal{N}_{h,r=6,s=3}$
\end_inset

, were also used as examples to demonstrate the advantage of network coding
 in 
\begin_inset CommandInset citation
LatexCommand cite
after "Fig. 2"
key "Sanders:2003"
literal "false"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
after "Fig. 2"
key "Jaggi:2005"
literal "false"

\end_inset

 respectively.
 The general structure of CN was also introduced and discussed in 
\begin_inset CommandInset citation
LatexCommand cite
after "Sec. 4.3"
key "Fragouli:2006"
literal "false"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
after "Sec. 4.1"
key "Yeung:2006"
literal "false"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "Ngai:2004,Xiao:2007"
literal "false"

\end_inset

.
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The butterfly network is represented as a combination network 
\begin_inset CommandInset label
LatexCommand label
name "fig:butterfly_nw_cn"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename E:/Documents/TUM/THESIS/thesisCOD_Ha/figures/ahlswede_butterfly_network_CN.pdf
	width 50page%
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A generalization of a CN 
\begin_inset CommandInset citation
LatexCommand cite
key "Riis:2006"
literal "false"

\end_inset

 is called generalized combination network (GCN).
 GCN defined in 
\begin_inset CommandInset citation
LatexCommand cite
key "Etzion:2016,Wachter-Zeh:2018"
literal "false"

\end_inset

 was used to prove that vector network coding outperforms scalar linear
 network coding , in multicast networks, with respect to the 
\shape italic
alphabet size
\shape default
, using rank-metric codes and Grassmannian codes.
 A comparison between the required alphabet size for a scalar linear solution,
 a vector solution, and a scalar nonlinear solution, of the same multicast
 network is an important problem.
 Etzion and Wachter-Zeh introduced a 
\shape italic
gap
\shape default
 in 
\begin_inset CommandInset citation
LatexCommand cite
key "Etzion:2016"
literal "false"

\end_inset

 as the difference between the smallest alphabet size for which a scalar
 linear solution exists and the smallest alphabet size for which they can
 construct a vector solution.
 They have found bounds on the gap for several network families of GCN in
 
\begin_inset CommandInset citation
LatexCommand cite
key "Etzion:2016,Wachter-Zeh:2018"
literal "false"

\end_inset

, but no gap for the GCN networks with 3 messages has been found, i.e.
 
\begin_inset Formula $(1,1)-\mathcal{N}_{3,r,4}$
\end_inset

, where we denote GCN by 
\begin_inset Formula $(\epsilon,l)-\mathcal{N}_{h,r,s}$
\end_inset

.
 Therefore, a combinatorial approach is first introduced in this thesis
 to prove an existence of a vector solution outperforming the optimal scalar
 linear solution with 
\begin_inset Formula $q^{t^{2}/4+\mathcal{O}(t)}$
\end_inset

.
 We then further extend the approach for a family of GCN called One-Direct
 Link Combination Network, i.e.
 
\begin_inset Formula $(1,1)-\mathcal{N}_{h,r,s}$
\end_inset

.
 More formal definitions of the gap and GCN can be found in Section XYZ.
 
\end_layout

\begin_layout Standard
>>> 
\strikeout on
What is alphabet size? Found in Bounding
\end_layout

\begin_layout Standard
>>> What is OPTIMAL scalar linear solution?
\end_layout

\begin_layout Standard
>>> 
\strikeout on
Why COMBINATION NETWORK?
\strikeout default
 
\end_layout

\begin_layout Standard
>>> 
\strikeout on
Definition of Gap
\end_layout

\begin_layout Section
Scalar Linear Network Coding
\end_layout

\begin_layout Standard
Our considered communication network is a directed graph
\begin_inset Foot
status open

\begin_layout Plain Layout
Network coding over undirected networks was introduced in 
\begin_inset CommandInset citation
LatexCommand cite
key "Li:2004"
literal "true"

\end_inset

.
\end_layout

\end_inset

 allowing multiple links, i.e.
 edges, from one node to another.
 Each 
\shape italic
link
\shape default
 in a network has 
\shape italic
unit capacity
\shape default
, i.e.
 it carries a packet which is either a symbol from 
\begin_inset Formula $\ensuremath{\mathbb{F}}_{q_{\mathrm{s}}}$
\end_inset

 (in scalar network coding), or a vector of length 
\begin_inset Formula $t$
\end_inset

 over 
\begin_inset Formula $\ensuremath{\mathbb{F}}_{q}$
\end_inset

 (in vector network coding).
 Note that the assumption of unit capacity does not restrict our considered
 networks, since links of larger capacity can be represented by multiple
 parallel links of unit capacity.
 A request of 
\begin_inset Formula $h$
\end_inset

 data units, i.e.
 
\begin_inset Formula $h$
\end_inset

 packets or 
\begin_inset Formula $h$
\end_inset

 messages, is therefore represented by a 
\begin_inset Formula $h$
\end_inset

-dimensional row vector 
\begin_inset Formula $\boldsymbol{x}\in\ensuremath{\mathbb{F}}_{q_{\mathrm{s}}}^{h}$
\end_inset

 (in scalar network coding), or 
\begin_inset Formula $\boldsymbol{x}\in\ensuremath{\mathbb{F}}_{q}^{th}$
\end_inset

 (in vector network coding).
 In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:incoming_links"
plural "false"
caps "false"
noprefix "false"

\end_inset

, a node of a network is repsented with its 
\shape italic
incoming links
\shape default
 and 
\shape italic
outgoing links
\shape default
.
 A node without any incoming link is a 
\shape italic
source
\shape default
 of the network.
 Packets are transmitted from the source to a set of destination nodes,
 i.e.
 receivers, over error-free links, which is still applicable to present-day
 wireline networks
\begin_inset Foot
status open

\begin_layout Plain Layout
Wireless network coding was introduced in 
\begin_inset CommandInset citation
LatexCommand cite
key "Katti:2008"
literal "true"

\end_inset

.
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Incoming links and outgoing links of a node 
\begin_inset CommandInset label
LatexCommand label
name "fig:incoming_links"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename E:/Documents/TUM/THESIS/thesisCOD_Ha/figures/incoming_edges.pdf
	height 10page%
	rotateOrigin center

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In simple routing, information is transmitted from the source to each destinatio
n node through a chain of 
\shape italic
intermediate nodes
\shape default
 by a method known as store-and-forward 
\begin_inset CommandInset citation
LatexCommand cite
key "Yeung:2006"
literal "true"

\end_inset

.
 In this method, the information can be represented as data packets, and
 the packets received from an incoming link, i.e.
 inputs, of an intermediate node can only be forwarded to a next node via
 an outgoing link as its output.
 Network Coding was though first introduced in Ahlswede et al.'s seminal
 paper as 
\begin_inset Quotes eld
\end_inset

coding at a node in a network
\begin_inset Quotes erd
\end_inset

, where coding means an arbitrary combination of inputs for an output.
 It means that each intermediate node in the network (not only at the source)
 is allowed to forward a function of their received packets.
 A 
\shape italic
network code
\shape default
 is a set of these functions of the packets on the links of the network
 
\begin_inset CommandInset citation
LatexCommand cite
key "Wachter-Zeh:2018"
literal "true"

\end_inset

.
 A network code is called a 
\shape italic
solution
\shape default
 for the network, if each receiver can recover its requested packets from
 the received packets on its incoming links.
 In other words, the network is 
\shape italic
solvable
\shape default
, if there exists an assignment of all the functions on all the links of
 the network such that each receiver can recover its requested information.
 If these functions are linear, we obtain a 
\shape italic
linear network coding solution
\shape default
, and we do not consider 
\shape italic
nonlinear solution
\shape default
 thoughout this thesis.
 Each function on a link consists of coding coefficients for each incoming
 packet.
 The coding coefficients form a coefficient vector of length as its number
 of incoming links, and this coefficient vector is called the 
\shape italic
local coding vector
\shape default
, which is distinguished with 
\shape italic
global coding vector
\shape default
 defined in Section XYZ.
 If the coding coefficients and the packets are scalars, a solution of linear
 network coding is called 
\shape italic
scalar solution
\shape default
.
 In 
\begin_inset CommandInset citation
LatexCommand cite
key "Koetter:2003"
literal "true"

\end_inset

, Kötter and M
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
'e
\end_layout

\end_inset

dard provided an algebraic formulation for the linear network coding problem
 and its scalar solvability.
 
\end_layout

\begin_layout Standard
Ebrahimi and Fragouli 
\begin_inset CommandInset citation
LatexCommand cite
key "Ebrahimi:2011"
literal "true"

\end_inset

 have then extended the algebraic approach to 
\shape italic
vector network coding
\shape default
.
 Here, all packets are vectors of length 
\begin_inset Formula $t$
\end_inset

, and the coding coefficients are 
\begin_inset Formula $\left[t\times t\right]$
\end_inset

 matrices.
 The network code hence is a set of functions consisting of 
\begin_inset Formula $\left[t\times t\right]$
\end_inset

 coding matrices, and is called 
\shape italic
vector solution
\shape default
 if all receivers can recover their requested information for such coding
 marices.
 In 
\begin_inset CommandInset citation
LatexCommand cite
key "Medard:2003"
literal "true"

\end_inset

, an example of a network which does not have a scalar solution, but is
 solvable by vector routing was shown.
 Although it was shown that not every solvable network has a vector solution
 in 
\begin_inset CommandInset citation
LatexCommand cite
after "Lemma II.2"
key "Dougherty:2005"
literal "true"

\end_inset

, Das and Rai proved in 
\begin_inset CommandInset citation
LatexCommand cite
key "Das:2016"
literal "true"

\end_inset

 that there exists a network with a vector solution of dimension 
\begin_inset Formula $m$
\end_inset

 but with no vector solution over any finite field whose the dimension is
 less than 
\begin_inset Formula $m$
\end_inset

.
 When we refer the 
\shape italic
alphabet size
\shape default
 of a network coding solution, we mean the field size 
\begin_inset Formula $q_{\mathrm{s}}$
\end_inset

 or 
\begin_inset Formula $q_{v}$
\end_inset

 of the finite field 
\begin_inset Formula $\ensuremath{\mathbb{F}}_{q_{\mathrm{s}}}$
\end_inset

 or 
\begin_inset Formula $\ensuremath{\mathbb{F}}_{q_{v}}$
\end_inset

 respectively for such a scalar solution or a vector solution.
 The alphabet size is an important parameter determining the amount of computati
on performed at each network vertice 
\begin_inset CommandInset citation
LatexCommand cite
key "Wachter-Zeh:2018"
literal "true"

\end_inset

.
 The problem of finding the minimum required alphabet size of a (linear
 or nonlinear) scalar network code for a certain multicast network is NP-complet
e 
\begin_inset CommandInset citation
LatexCommand cite
key "Langberg:2009,Lehman:2004"
literal "true"

\end_inset

.
 This thesis focus on determining the sovability of networks to measure
 the gap, and our considered networks consist only error-free links; hence,
 we do not consider error correction here.
 Furthermore, we consider the solvability of networks by proving an existence
 of an assignment for all functions or coding coefficients such that all
 receiver can recover its requested information, so the function is not
 arbitrary or random as mentioned in 
\begin_inset CommandInset citation
LatexCommand cite
key "Ho:2003,Ahlswede:2000"
literal "true"

\end_inset

.
 The network structure is also known, i.e.
 our considered network is coherent.
\end_layout

\begin_layout Section
Vector Network Coding
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "E:/Documents/TUM/THESIS/thesisCOD_Ha/refs/final_ref_bib"
options "IEEEtran"

\end_inset


\end_layout

\end_body
\end_document
